# This is a comment.
language :english do
  number_of_apples "Number of Apples", num_apples_en.wav
end

language :french do
  number_of_apples "que pomme duex beaujolais?", num_apples_fr.wav
end

fields do 
  number_of_apples, :type => :select_one, :range => [1..5]
  color_of_apples, :type => :select_many, :range => [ :red, :green, :yellow ]
    #=> What color apples? ( choose any of red , green , yellow  sepparated by commas for mu....)
  likes_apples, :type => :yes_no
  social_security_number
end

#basic validation
validates_numericality_of :number_of_apples

#may not need validation.  Maybe ver 2
custom_validation :number_of_apples, lambda {|field| field.is_a_number? }

#advanced custom validation
def custom_validations
  if number_of_apples > 2 and color.green?
    number_of_apples.errors << "You did not enter any apples"
  end
end


conversation do
  say 'hello', :only => :ivr
  
  collect number_of_apples
  if number_of_apples > 4 
    transfer operator # operator is a keyword, could also be transfer +15083332222 or similar
    done
  end

  collect color_of_apples
  
  if likes_apples 
    collect :number_of_apples, :web => :selection, :ivr => :indexed, :text => "What color apples? ( choose any of red , green , yellow  sepparated by commas for mu....)"
    collect :color_of_apples, :web => :checkboxes
    if number_of_apples > 3 then
      collect :social_security_number
    end 
  end
  
  say goodbye
end

